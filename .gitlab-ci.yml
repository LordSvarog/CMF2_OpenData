image: docker:latest
variables:
    DOCKER_DRIVER: overlay
services:
    - docker:dind
stages:
    - test
    - deploy
before_script:
    - 'which sshpass || ( apk update && apk add sshpass )'
    - mkdir -p ~/.ssh
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
    - composer self-update
    - cd ./html/framework && composer install --prefer-dist --no-interaction --no-progress --ignore-platform-reqs && cd ../../
    - docker info
    - apk update
    - apk upgrade
    - apk add python python-dev py-pip build-base
    - pip install docker-compose
migrate:
    stage: test
    script:
        - docker version
        - docker-compose version
        - mv .env.test .env
        - ls -la
        - pwd
        - docker-compose up -d
        - ./docker-exec pwd
        - ./docker-exec ls -l
        - docker-compose down
    only:
        - master
dev:
    stage: deploy
    environment: dev
    script:
        - sshpass -p $SSH_PASSWORD rsync -riz --links --delete -e "ssh" --exclude-from="exclude.txt" . $SSH_USERNAME@$SSH_HOST:$SSH_DIRECTORY
        - sshpass -p $SSH_PASSWORD ssh $SSH_USERNAME@$SSH_HOST "cd $SSH_DIRECTORY && ./docker-mysql-backup -c cmf2devvpsru_mysql_1"
        - sshpass -p $SSH_PASSWORD ssh $SSH_USERNAME@$SSH_HOST "cd $SSH_DIRECTORY && ./docker-cron /root/cron/tabs"
        - sshpass -p $SSH_PASSWORD ssh $SSH_USERNAME@$SSH_HOST "cd $SSH_DIRECTORY && ./docker-exec framework/yii migrate/up"
        - sshpass -p $SSH_PASSWORD ssh $SSH_USERNAME@$SSH_HOST "cd $SSH_DIRECTORY && ./docker-exec framework/yii access/install"
        - sshpass -p $SSH_PASSWORD ssh $SSH_USERNAME@$SSH_HOST "cd $SSH_DIRECTORY && ./docker-exec framework/yii cache/flush-all"
    only:
        - master
production:
    stage: deploy
    environment: production
    script:
        - ls -l html
    only:
        - production
