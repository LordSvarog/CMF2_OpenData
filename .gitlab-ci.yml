image: runner:compose
stages:
    - tests
    - codeception
    - deploy
before_script:
    # Software
    - docker version
    - docker-compose version
    # Configure ssh
    - mkdir -p ~/.ssh
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
    # Configure docker-compose
    - cp .env.gitlab .env
    # Up
    - docker-compose build
    - docker-compose up -d
    - docker-compose ps
migrate:
    stage: tests
    environment: tests
    script:
        # Install
        - ./docker.sh install wait
    tags:
        - compose
codeception:
    stage: tests
    environment: codeception
    script:
        # Try tests
        - ./docker.sh tests wait
    tags:
        - compose
dev:
    stage: deploy
    environment: dev
    script:
        # Composer install
        - ./docker.sh exec composer --working-dir=framework install

        - sshpass -p $SSH_PASSWORD rsync -riz --links --delete -e "ssh -p $SSH_PORT" --exclude-from="exclude.txt" . $SSH_USERNAME@$SSH_HOST:$SSH_DIRECTORY
        - sshpass -p $SSH_PASSWORD ssh -p $SSH_PORT $SSH_USERNAME@$SSH_HOST "cd $SSH_DIRECTORY && ./docker.sh mysql-backup"
        - sshpass -p $SSH_PASSWORD ssh -p $SSH_PORT $SSH_USERNAME@$SSH_HOST "cd $SSH_DIRECTORY && ./docker.sh exec crontab /var/spool/cron/config/crontab"
        - sshpass -p $SSH_PASSWORD ssh -p $SSH_PORT $SSH_USERNAME@$SSH_HOST "cd $SSH_DIRECTORY && ./docker.sh exec framework/yii migrate/up"
        - sshpass -p $SSH_PASSWORD ssh -p $SSH_PORT $SSH_USERNAME@$SSH_HOST "cd $SSH_DIRECTORY && ./docker.sh exec framework/yii access/install"
        - sshpass -p $SSH_PASSWORD ssh -p $SSH_PORT $SSH_USERNAME@$SSH_HOST "cd $SSH_DIRECTORY && ./docker.sh exec framework/yii cache/flush-all"
    only:
        - master
    tags:
        - compose
production:
    stage: deploy
    environment: production
    script:
        # Composer install
        - ./docker.sh exec composer --working-dir=framework install --no-dev

        - sshpass -p $SSH_PASSWORD_PROD rsync -riz --links --delete -e "ssh -p $SSH_PORT_PROD" --exclude-from="exclude.txt" . $SSH_USERNAME_PROD@$SSH_HOST_PROD:$SSH_DIRECTORY_PROD
        - sshpass -p $SSH_PASSWORD_PROD ssh -p $SSH_PORT_PROD $SSH_USERNAME_PROD@$SSH_HOST_PROD "cd $SSH_DIRECTORY_PROD && /usr/local/php71/bin/php html/framework/yii migrate/up"
        - sshpass -p $SSH_PASSWORD_PROD ssh -p $SSH_PORT_PROD $SSH_USERNAME_PROD@$SSH_HOST_PROD "cd $SSH_DIRECTORY_PROD && /usr/local/php71/bin/php html/framework/yii access/install"
        - sshpass -p $SSH_PASSWORD_PROD ssh -p $SSH_PORT_PROD $SSH_USERNAME_PROD@$SSH_HOST_PROD "cd $SSH_DIRECTORY_PROD && /usr/local/php71/bin/php html/framework/yii cache/flush-all"
    only:
        - production
    tags:
        - compose
after_script:
    # Down
    - docker-compose down
    # Cleanse
    - find . -delete
