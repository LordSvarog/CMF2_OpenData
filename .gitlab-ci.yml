image: runner:compose
stages:
    - tests
    - deploy
before_script:
    # Software
    - docker version
    - docker-compose version
    # Configure docker-compose
    - cp .env.gitlab .env
    # Up
    - make docker/build
    - make start
tests:
    stage: tests
    environment: tests
    script:
        # Configure application
        - cp html/.env.gitlab html/.env.local

        - make install
    tags:
        - compose
    only:
        - schedules
develop:
    stage: deploy
    environment: develop
    script:
        # Composer self install
        - composer global require yii2-developer/recipes ~0.0.1 # todo

        # Composer install
        - make composer/install

        # Deploy
        - dep deploy:develop -vvv
    variables:
        SSH_DIRECTORY: "$SSH_DIRECTORY"
        SSH_HOST: "$SSH_HOST"
        SSH_PORT: "$SSH_PORT"
        SSH_USERNAME: "$SSH_USERNAME"
    only:
        - master
    tags:
        - compose
    except:
        - schedules
production:
    stage: deploy
    environment: production
    script:
        # Composer install
        - make composer/install cmd='--no-dev'

        - sshpass -p $SSH_PASSWORD_PROD rsync -riz --links --delete -e "ssh -p $SSH_PORT_PROD" --exclude-from="exclude.txt" --include-from="include.txt" . $SSH_USERNAME_PROD@$SSH_HOST_PROD:$SSH_DIRECTORY_PROD
        - sshpass -p $SSH_PASSWORD_PROD ssh -p $SSH_PORT_PROD $SSH_USERNAME_PROD@$SSH_HOST_PROD "cd $SSH_DIRECTORY_PROD && /usr/local/php71/bin/php html/framework/yii migrate/up"
        - sshpass -p $SSH_PASSWORD_PROD ssh -p $SSH_PORT_PROD $SSH_USERNAME_PROD@$SSH_HOST_PROD "cd $SSH_DIRECTORY_PROD && /usr/local/php71/bin/php html/framework/yii access/install"
        - sshpass -p $SSH_PASSWORD_PROD ssh -p $SSH_PORT_PROD $SSH_USERNAME_PROD@$SSH_HOST_PROD "cd $SSH_DIRECTORY_PROD && /usr/local/php71/bin/php html/framework/yii cache/flush-all"
    only:
        - production
    tags:
        - compose
    except:
        - schedules
after_script:
    # Down
    - make stop
    # Cleanse
    - find . -delete
